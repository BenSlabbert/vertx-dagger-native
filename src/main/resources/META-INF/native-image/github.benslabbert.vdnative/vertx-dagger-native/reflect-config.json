[
  {
    "name": "io.vertx.launcher.application.VertxApplication",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.vertx.ext.web.impl.RouterImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.vertx.core.net.impl.NetServerImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      { "name": "vertx" },
      { "name": "options" },
      { "name": "closeSequence" },
      { "name": "handler" },
      { "name": "exceptionHandler" },
      { "name": "eventLoop" },
      { "name": "initializer" },
      { "name": "channelGroup" },
      { "name": "worker" },
      { "name": "listening" },
      { "name": "listenContext" },
      { "name": "actualServer" },
      { "name": "closeEvent" },
      { "name": "graceFuture" },
      { "name": "sslContextManager" },
      { "name": "sslContextProvider" },
      { "name": "updateInProgress" },
      { "name": "trafficShapingHandler" },
      { "name": "channelBalancer" },
      { "name": "bindFuture" },
      { "name": "servers" },
      { "name": "metrics" },
      { "name": "actualPort" }
    ]
  },
  {
    "name": "io.vertx.launcher.application.impl.VertxApplicationCommand",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "vertxOptionsStr"
      },
      {
        "name": "clustered"
      },
      {
        "name": "clusterPort"
      },
      {
        "name": "clusterHost"
      },
      {
        "name": "clusterPublicPort"
      },
      {
        "name": "clusterPublicHost"
      },
      {
        "name": "deploymentOptionsStr"
      },
      {
        "name": "worker"
      },
      {
        "name": "virtualThread"
      },
      {
        "name": "instances"
      },
      {
        "name": "configStr"
      },
      {
        "name": "helpRequested"
      },
      {
        "name": "mainVerticle"
      }
    ]
  },
  {
    "name": "io.vertx.core.http.impl.HttpServerImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "DISABLE_WEBSOCKETS"
      },
      {
        "name": "vertx"
      },
      {
        "name": "options"
      },
      {
        "name": "requestHandler"
      },
      {
        "name": "webSocketHandler"
      },
      {
        "name": "webSocketHandhakeHandler"
      },
      {
        "name": "invalidRequestHandler"
      },
      {
        "name": "connectionHandler"
      },
      {
        "name": "exceptionHandler"
      },
      {
        "name": "tcpServer"
      },
      {
        "name": "closeTimeout"
      },
      {
        "name": "closeTimeoutUnit"
      },
      {
        "name": "closeSequence"
      }
    ]
  },
  {
    "name": "io.vertx.core.net.NetServerOptions",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "port"
      },
      {
        "name": "host"
      },
      {
        "name": "acceptBacklog"
      },
      {
        "name": "useProxyProtocol"
      },
      {
        "name": "proxyProtocolTimeout"
      },
      {
        "name": "proxyProtocolTimeoutUnit"
      },
      {
        "name": "registerWriteHandler"
      },
      {
        "name": "trafficShapingOptions"
      }
    ]
  },
  {
    "name": "io.vertx.core.http.HttpServerOptions",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "compressionSupported"
      },
      {
        "name": "compressionLevel"
      },
      {
        "name": "compressionContentSizeThreshold"
      },
      {
        "name": "compressors"
      },
      {
        "name": "maxWebSocketFrameSize"
      },
      {
        "name": "maxWebSocketMessageSize"
      },
      {
        "name": "webSocketSubProtocols"
      },
      {
        "name": "handle100ContinueAutomatically"
      },
      {
        "name": "maxChunkSize"
      },
      {
        "name": "maxInitialLineLength"
      },
      {
        "name": "maxHeaderSize"
      },
      {
        "name": "maxFormAttributeSize"
      },
      {
        "name": "maxFormFields"
      },
      {
        "name": "maxFormBufferedBytes"
      },
      {
        "name": "initialSettings"
      },
      {
        "name": "alpnVersions"
      },
      {
        "name": "http2ClearTextEnabled"
      },
      {
        "name": "http2ConnectionWindowSize"
      },
      {
        "name": "decompressionSupported"
      },
      {
        "name": "acceptUnmaskedFrames"
      },
      {
        "name": "decoderInitialBufferSize"
      },
      {
        "name": "perFrameWebSocketCompressionSupported"
      },
      {
        "name": "perMessageWebSocketCompressionSupported"
      },
      {
        "name": "webSocketCompressionLevel"
      },
      {
        "name": "webSocketAllowServerNoContext"
      },
      {
        "name": "webSocketPreferredClientNoContext"
      },
      {
        "name": "webSocketClosingTimeout"
      },
      {
        "name": "tracingPolicy"
      },
      {
        "name": "registerWebSocketWriteHandlers"
      },
      {
        "name": "http2RstFloodMaxRstFramePerWindow"
      },
      {
        "name": "http2RstFloodWindowDuration"
      },
      {
        "name": "http2RstFloodWindowDurationTimeUnit"
      },
      {
        "name": "strictThreadMode"
      }
    ]
  },
  {
    "name": "java.lang.Long",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Integer",
    "allDeclaredConstructors": true
  },
  {
    "name": "github.benslabbert.vdnative.verticle.MainVerticle",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "github.benslabbert.vdnative.verticle.EBVerticle",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ],
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true

  },
  {
    "name": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  }
]
